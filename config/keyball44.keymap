#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp TAB       &kp Q         &kp W    &kp E      &kp R  &kp T             &kp Y        &kp U  &kp I      &kp O    &kp P        &kp BACKSPACE
&kp LSHIFT    &lt 6 A       &lt 6 S  &kp D      &kp F  &kp G             &kp H        &kp J  &lt 3 K    &lt 3 L  &lt 5 COLON  &kp ENTER
&kp LCTRL     &kp Z         &kp X    &kp C      &kp V  &kp B             &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH    &kp GRAVE
&kp LEFT_ALT  &kp LEFT_WIN  &mo 1    &kp SPACE  &mo 3             &mo 2  &lt 6 ENTER                                          &kp LC(SPACE)
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp ESCAPE  &kp EXCL  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5              &kp N7        &kp N8        &kp N9        &kp AT_SIGN     &kp DEL         &kp BACKSPACE
&none       &kp LEFT  &kp DOWN      &kp UP_ARROW  &kp RIGHT     &none                     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS       &kp UP_ARROW    &kp ENTER
&none       &none     &none         &none         &none         &none                     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT
&trans      &trans    &trans        &trans        &trans                          &trans  &kp N0                                                                    &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&none   &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT              &kp CARET  &kp AMPERSAND    &kp ASTERISK      &kp MINUS          &kp DEL               &kp F12
&none   &bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &kp UNDER                &kp MINUS  &kp EQUAL        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SQT               &kp PAGE_UP
&none   &trans           &trans        &trans        &trans        &trans                   &kp MINUS  &kp EXCLAMATION  &kp QUESTION      &kp QUESTION       &kp NON_US_BACKSLASH  &kp PAGE_DOWN
&trans  &trans           &trans        &trans        &trans                         &trans  &trans                                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2  &kp F3   &kp F4   &kp F5   &kp F6              &kp F7  &kp F8     &kp F9     &kp F10  &kp F11  &kp F12
&none   &kp F5  &kp F6   &kp F7   &kp F8   &none               &none   &mkp LCLK  &mkp RCLK  &none    &none    &none
&none   &kp F9  &kp F10  &kp F11  &kp F12  &none               &none   &none      &none      &none    &none    &none
&trans  &trans  &trans   &trans   &trans               &trans  &mo 3                                           &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &none   &none   &none   &none   &none              &kp N6         &kp N7     &kp N8     &kp N9  &kp N0     &none
&none   &none   &none   &none   &none   &none              &kp PAGE_UP    &mkp LCLK  &mkp RCLK  &mo 5   &mkp MCLK  &none
&none   &none   &none   &none   &none   &none              &kp PAGE_DOWN  &none      &none      &none   &none      &none
&trans  &trans  &trans  &trans  &trans             &trans  &trans                                                  &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans     &trans  &trans  &trans              &kp N7        &kp N8        &kp N9        &kp MINUS  &kp DEL  &trans
&trans  &trans  &kp LCTRL  &trans  &kp F1  &trans              &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans     &trans   &trans
&trans  &trans  &trans     &trans  &kp F2  &trans              &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0     &mo 7    &kp LG(NUMBER_1)
&trans  &trans  &trans     &trans  &trans              &trans  &trans                                                        &trans
            >;
        };

        layer_7 {
            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans              &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans                    &trans  &trans                                  &trans
            >;
        };
    };
};
